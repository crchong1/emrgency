<!DOCTYPE html>
<html>
<head>
    <style>
    .filter {
        padding: 1rem;
    }
    .btn {
        padding: .1em ;
        font-size: .5rem;
    }

    .sort {
        padding: 1rem;
    }
    .nav {
      background-color:rgba(0,0,0,0.2) !important;
      border-color: transparent !important;
      background-image:none !important;
      color:white !important;
  }
  .nav .btn {
    background-color: rgba(255, 255, 255, 0) !important;
    color: rgb(255, 255, 255);
    border-color: rgba(255, 255, 255, 0.205)!important;
}
.nav li{
  padding-left:30px;
  padding-right:20px;
}
.nav a{
  color:white !important;
}
.nav input{
  background-color: rgba(255, 255, 255, 0.171);
  border-color: transparent !important;
}
.nav ::placeholder {
  color:white !important;
}
.jumbo {
    color: rgba(255, 255, 255, 0.644);
    background-color: rgba(255, 0, 0, 0.521) !important;
}

.jumbo h1 {
    font-size: 7em !important;
}

.jumbo h2 {
    font-size: 4em !important;
    font-family: Pacifico;
}

.jumbo p {
    font-size: 2em !important;
}
.jumbotron {
    padding: 1rem !important;
}   
</style>
<title>Patient Search</title>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Pacifico"/>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>

</head>
<body> 
    <div id='welcome' class="jumbotron jumbo jumbotron-fluid">
      <div class="container">
        <h2 class="display-4">Search a Patient</h2>
        <div class="col-lg-6">
          <div class="input-group">
                <input type="text" id="firstNameSearch" class="form-control" name="patientFirstName" placeholder="Search by first name...">
                <span class="input-group-btn">
                    <button class="btn btn-default" id="searchButon" type="submit">Search!</button>
                </span>
            </div>
            <div class="input-group">
                <input type="text" id="lastNameSearch" class="form-control" name="patientLastName" placeholder="Search by last name...">
                <span class="input-group-btn">
                    <button class="btn btn-default" id="searchButon" type="submit">Search!</button>
                </span>
            </div>
            <div class = "filter">
                <h3> Filter </h3>
                <div class="input-group">
                  <input type="text" id="filterAge" class="form-control" name="filterAge" placeholder="Age...">
                  <input type="text" id="filterHeight" class="form-control" name="filterHeight" placeholder="Height...">
                  <input type="text" id="filterWeight" class="form-control" name="filterWeight" placeholder="Weight...">
                  <span class="input-group-btn">
                    <button class="btn btn-default" id="filterWeightBtn" type="submit">Search!</button>
                </span>
            </div>
            <!-- /input-group -->
        </div>
        <div class = "sort">
            <h3> Sort </h3>
    

        <div class="dropdown">
            <input type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" value="Name Sort">
            <ul id="nameSort" class="dropdown-menu">
                <input type="hidden" id="admin_id" class="form-control">
                <li id="1"><a href="#">A to Z</a></li>
                <li id="2"><a href="#">Z to A</a></li>
            </ul>
        </div>
        <div class="dropdown">
            <input type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" value="Age Sort">
            <ul id="ageSort" class="dropdown-menu" >
                <li id="1"><a href="#">Youngest to Oldest</a></li>
                <li id="2"><a href="#">Oldest to Youngest</a></li>
                <li id="3"><a href="#">0 to 5</a></li>
                <li id="4"><a href="#">5 to 10</a></li>
                <li id="5"><a href="#">10 to 20</a></li>

            </ul>
        </div>

        <div class="dropdown">
            <input type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" value="Patient ID Sort">
            <ul id="idSort" class="dropdown-menu" >
                <li id="1"><a href="#">Low to High</a></li>
                <li id="2"><a href="#">High to Low</a></li>
            </ul>
        </div>
                </div>

    </div>
</div><!-- /.col-lg-6 -->
        <!-- <button id='next' type="button" class="btn btn-info">Next Page</button>
            <button id='prev' type="button" class="btn btn-info">Previous Page</button> -->
        </div>
    </div>
    <div class="container" id='patientCards'></div>

    <script>
       var pageCounter = 0;
       var patients;

       $(document).ready(function(){
            // Initial Page Load
            /*
            $.ajax({
                type: 'POST',
                url: '/getPatientKeys',
                data: {
                    lastName: '',
                },
                success: function(result) {
                    patients = result.patient;
                    console.log(patients);
                    updatePatientKeys(result.patient);
                }
            });
            */
              $.ajax({
                type: 'POST',
                url: '/getPatientKeys',
                data: {
                    search: '',
                    field: 'lastName',
                },
                success: function(result) {
                    patients = result.patient;
                    updatePatientKeys(result.patient);
                }
            });

            // On Search
            $('#lastNameSearch').bind('input', function(){
                var searchstring = $('#lastNameSearch').val();
                $.ajax({
                    type: 'POST',
                    url: '/getPatientKeys',
                    data: {
                        search: searchstring,
                        field: 'lastName',
                    },
                    success: function(result) {
                        patients = result.patient;
                        updatePatientKeys(result.patient);
                    }
                });
            });
                        $('#firstNameSearch').bind('input', function(){
                var searchstring = $('#firstNameSearch').val();
                $.ajax({
                    type: 'POST',
                    url: '/getPatientKeys',
                    data: {
                        search: searchstring,
                        field: 'firstName'
                    },
                    success: function(result) {
                        patients = result.patient;
                        updatePatientKeys(result.patient);
                    }
                });
            });

            $(".dropdown-menu li a").click(function(){
              console.log(patients);
              var selText = $(this).text();
              $(this).parents('.dropdown').find('.dropdown-toggle').val(selText);

              var sortBy = $(this).parents('.dropdown-menu').get(0).id;
              var val = $(this).get(0).parentElement.id;

              if (sortBy == 'ageSort') {
                if (val == 1) {
                 youngToOld(patients);
                 console.log(patients)
             } else if (val == 2) {
                oldToYoung(patients);
            } else if (val == 3) {
               ageRange(patients);
           } 
       } else if (sortBy == 'nameSort') {
           if (val == 1) {
               aToZ(patients);
           } else if (val == 2) {
            zToA(patients)
        } 
    } else if (sortBy == 'idSort') {
        if (val == 1) {
           loToHi(patients);
       } else if (val == 2) {
           hiToLo(patients)
       } 
   }
});

        });
       var updatePatientKeys = function(patient) {
        console.log('here:' + patient);
        var cards = "";
        var date = new Date(2018,2,12);

        for(var i = 0; i < patient.length; i++) {
          cards += '<div class="card">';
          cards += '<div class="card-body">';
          cards += '<h5 class="card-title">' + patient[i].lastName + ', ' +  patient[i].firstName +  '</h5>';
          cards += '<h6 class="card-subtitle mb-2 text-muted">Given Name: '+patient[i].givenName+', '+ patient[i].sex+'</h6>';
          cards += '<p class="card-text">';
          cards += 'Birthdate: ' + patient[i].birthdate + ', ';
          cards += 'Age: ' + getAge(date) + ', ';
                        // CALCULATE AGE FROM BIRTHDATE HERE
                        cards += 'Height: ' + patient[i].height + ', ';
                        cards += 'Weight: ' + patient[i].weight + ', ';
                        cards += 'Father: ' + patient[i].father + ', ';
                        cards += 'Mother: ' + patient[i].mother + ', ';
                        cards += '</p>';
                        cards += '<a href="/#'+ patient[i].id + '" class="card-link">Card link</a>';
                        cards += '</div>';
                        cards += '</div>';
                      }
                      document.getElementById('patientCards').innerHTML = cards;
                    };

                    var youngToOld = function(patient) {
                      console.log(patient);
                    };
                    var aToZ = function(patient) {
                      patient.sort(function(a, b){
                       var elt1=a.lastName.toLowerCase(), elt2=b.lastName.toLowerCase()
                    if (elt1 < elt2) //sort string ascending
                      return -1
                    if (elt1 > elt2)
                     return 1
                    return 0 //default return value (no sorting)
                  });
                      updatePatientKeys(patient);
                    };
                    var zToA = function(patient) {
                      patient.sort(function(a, b){
                       var elt1=a.lastName.toLowerCase(), elt2=b.lastName.toLowerCase()
                    if (elt1 > elt2) //sort string descending
                      return -1
                    if (elt1 < elt2)
                     return 1
                    return 0 //default return value (no sorting)
                  });
                      updatePatientKeys(patient);
                    };

                    var loToHi = function(patient) {
                      patient.sort(function(a, b){
                       var elt1=a.id, elt2=b.id;
                    if (elt1 < elt2) //sort string descending
                      return -1
                    if (elt1 > elt2)
                     return 1
                    return 0 //default return value (no sorting)
                  });
                      updatePatientKeys(patient);
                    };

                    var hiToLo = function(patient) {
                      patient.sort(function(a, b){
                       var elt1=a.id, elt2=b.id;
                    if (elt1 > elt2) //sort string ascending
                      return -1
                    if (elt1 < elt2)
                     return 1
                    return 0 //default return value (no sorting)
                  });
                      updatePatientKeys(patient)
                    };

                function getAge(fromdate, todate){
                  if(todate) todate= new Date(todate);
                  else todate= new Date();

                  var age= [], fromdate= new Date(fromdate),
                  y= [todate.getFullYear(), fromdate.getFullYear()],
                  ydiff= y[0]-y[1],
                  m= [todate.getMonth() + 1, fromdate.getMonth()],
                  mdiff= m[0]-m[1],
                  d= [todate.getDate(), fromdate.getDate()],
                  ddiff= d[0]-d[1];
                  
                  if(mdiff < 0 || (mdiff=== 0 && ddiff<0))--ydiff;
                  if(mdiff<0) mdiff+= 12;
                  if(ddiff<0){
                    fromdate.setMonth(m[1]+1, 0);
                    ddiff= fromdate.getDate()-d[1]+d[0];
                    --mdiff;
                  }
                  w = Math.floor(ddiff/7);
                  ddiff = ddiff % 7;
                  // 3 or older -> show year
                  if (ydiff > 2) age.push(ydiff+ ' year'+(ydiff> 1? 's ':' '));
                  else if (ydiff> 0) {
                    // Over a year -> show year and month
                    age.push(ydiff+ ' year'+(ydiff> 1? 's ':' '));
                    if(mdiff> 0) age.push(mdiff+ ' month'+(mdiff> 1? 's':''));
                    // Less than a year -> show month and day
                  } else if (mdiff> 3) {
                   age.push(mdiff+ ' month'+(mdiff> 1? 's':''));
                   if (w> 0) age.push(w+ ' week' + (w> 1? 's':''));
                 } else if (mdiff>0) {
                  age.push(mdiff+ ' month'+(mdiff> 1? 's ':' '));
                  if(w> 0) age.push(w+ ' week'+(w> 1? 's':''));
                } else {
                  if(w> 0) age.push(w+ ' week'+(w> 1? 's':''));
                  if(ddiff> 0) age.push(ddiff+ ' day'+(ddiff> 1? 's':''));
                }

                if(age.length>1) age.splice(age.length-1,0,' and ');    
                return age.join('');
              }



            </script>
        </body>
        </html>
